#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
#define MAX 3

int buffer[MAX];
int in=0,out=0;
sem_t full,empty;
pthread_mutex_t mutex;

void *producer(void *arg)
{
    int i;
    for(i=0;i<4;i++)
    {
        sem_wait(&empty);
        pthread_mutex_lock(&mutex);
        buffer[in]=i;
        printf("Produced: %d\n",i);
        in=(in+1)%MAX;
        pthread_mutex_unlock(&mutex);
        sem_post(&full);
    }
}

void *consumer(void *arg)
{
    int i,item;
    item=buffer[out];
    sem_wait(&full);
    pthread_mutex_lock(&mutex);
    printf("Consumed: %d\n",item);
    out=(out+1)%MAX;
    pthread_mutex_unlock(&mutex);
    sem_post(&empty);
}

int main()
{
    pthread_t p,c;
    sem_init(&empty,0,MAX);
    sem_init(&full,0,0);
    pthread_mutex_init(&mutex,NULL);
    pthread_create(&c,NULL,consumer,NULL);
    pthread_create(&p,NULL,producer,NULL);
    pthread_join(p,NULL);
    pthread_join(c,NULL);
    sem_destroy(&empty);
    sem_destroy(&full);
    pthread_mutex_destroy(&mutex);
    return 0;
}

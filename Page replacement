#include <stdio.h>
#include <stdbool.h>

#define MAX_PAGE_FRAMES 3

int pageFrames[MAX_PAGE_FRAMES];
int pageFaults = 0;

// Check if the page is already in memory
bool inMemory(int page)
{
    for (int i = 0; i < MAX_PAGE_FRAMES; i++)
    {
        if (pageFrames[i] == page)
        {
            return true;
        }
    }

    return false;
}

// Returns the least recently used page in memory
int getLRU()
{
    int oldestTimestamp = -1;
    int oldestFrame = -1;

    for (int i = 0; i < MAX_PAGE_FRAMES; i++)
    {
        int currentTimestamp = 0;

        for (int j = 0; j < MAX_PAGE_FRAMES; j++)
        {
            if (pageFrames[j] == pageFrames[i])
            {
                currentTimestamp = j;
                break;
            }
        }

        if (currentTimestamp > oldestTimestamp)
        {
            oldestTimestamp = currentTimestamp;
            oldestFrame = i;
        }
    }

    return oldestFrame;
}

void requestPage(int page)
{
    if (!inMemory(page))
    {
        // Page fault
        pageFaults++;

        int replaceIndex = 0;
        if (pageFrames[0] == -1)
        {
            replaceIndex = 0;
        }
        else if (pageFrames[1] == -1)
        {
            replaceIndex = 1;
        }
        else if (pageFrames[2] == -1)
        {
            replaceIndex = 2;
        }
        else
        {
            // Find the least recently used page
            replaceIndex = getLRU();
        }

        // Replace the page
        pageFrames[replaceIndex] = page;
    }
}

int main()
{
    // Initialize page frames
    for (int i = 0; i < MAX_PAGE_FRAMES; i++)
    {
        pageFrames[i] = -1;
    }

    int pages[] = {1, 2, 3, 2, 1, 5, 2, 1, 6, 2, 5, 6, 3, 1, 3, 6, 1, 2, 4, 3};
    int numPages = sizeof(pages) / sizeof(pages[0]);

    for (int i = 0; i < numPages; i++)
    {
        requestPage(pages[i]);

        printf("Page frames after request %d: [", pages[i]);
        for (int j = 0; j < MAX_PAGE_FRAMES; j++)
        {
            printf("%d ", pageFrames[j]);
        }
        printf("]\n");
    }

    printf("Number of page faults: %d\n", pageFaults);

    return 0;
}

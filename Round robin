#include <stdio.h>
#include <string.h>

#define MAX_PROCESSES 3
#define MAX_TIME_SLOT 4

int processes[MAX_PROCESSES][2];

void RoundRobin(int n, int bt[], int quantum) {
  int remaining_bt[n];
  memcpy(remaining_bt, bt, sizeof remaining_bt);

  int current_time = 0;
  int waiting_time = 0;
  int turnaround_time = 0;

  while (1) {
    int completed = 1;
    for (int i = 0; i < n; i++) {
      if (remaining_bt[i] > 0) {
        completed = 0;

        if (remaining_bt[i] > quantum) {
          current_time += quantum;
          remaining_bt[i] -= quantum;
        } else {
          current_time += remaining_bt[i];
          waiting_time += current_time - bt[i];
          turnaround_time += current_time;
          remaining_bt[i] = 0;
        }
      }
    }

    if (completed == 1)
      break;
  }

  printf("Average Waiting Time: %.2f\n", (float)waiting_time / n);
  printf("Average Turnaround Time: %.2f\n", (float)turnaround_time / n);
}

int main() {
  int burst_time[] = {24, 3, 3};
  int quantum = 4;

  int n = sizeof burst_time / sizeof burst_time[0];
  RoundRobin(n, burst_time, quantum);

  return 0;
}

#include<stdio.h>

#define MAX_TRACKS 200

void CSCAN(int arr[], int head, int n)
{
    int i, j, seek=0;
    int left_right[MAX_TRACKS];

    for (i=0; i<n; i++)
    {
        if (arr[i]>=head)
        {
            left_right[i]=1;
        }
        else
        {
            left_right[i]=0;
        }
    }

    int start = 0, end = n-1;
    while (start<=end)
    {
        int min = 0x7fffffff;
        int min_index;
        for (i=0; i<n; i++)
        {
            if (left_right[i] == 1 && arr[i]<=min)
            {
                min = arr[i];
                min_index = i;
            }
        }

        for (i=0; i<n; i++)
        {
            if (arr[i] == min)
            {
                left_right[i]=2;
                start = i+1;
            }
        }
        seek += abs(min - head);
        head = min;
    }

    int temp = head;
    head = 0;

    for (i=0; i<n; i++)
    {
        if (arr[i]<head && left_right[i]!=2)
        {
            min = arr[i];
            min_index = i;
        }
    }

    for (i=0; i<n; i++)
    {
        if (arr[i] == min)
        {
            left_right[i]=2;
            start = i+1;
        }
    }
    seek += abs(temp-head) + abs(min-head);
    head = min;

    for (i=0; i<n; i++)
    {
        if (left_right[i]!=2)
        {
            seek += abs(arr[i]-head);
            head = arr[i];
        }
    }

    float avg_seek = (float)seek/n;
    printf("Average Seek Time is %f\n", avg_seek);
}

int main()
{
    int arr[] = {55, 58, 60, 70, 18};
    int n = sizeof(arr)/sizeof(arr[0]);
    int head = 55;
    CSCAN(arr, head, n);
    return 0;
}
